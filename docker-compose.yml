version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-money_manager}
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password123}
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/scripts
    networks:
      - money-manager-network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${DB_USER:-admin} -d ${DB_NAME:-money_manager}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - '${PORT:-8080}:8080'
    environment:
      - PORT=8080
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-money_manager}
      - DB_USER=${DB_USER:-admin}
      - DB_PASSWORD=${DB_PASSWORD:-password123}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-in-production}
      - GIN_MODE=${GIN_MODE:-release}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - money-manager-network
    command: ['./wait-for-db.sh', 'db', '5432', './main']

  # Redis for session storage (optional)
  # redis:
  #   image: redis:7-alpine
  #   restart: unless-stopped
  #   ports:
  #     - "${REDIS_PORT:-6379}:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - money-manager-network
  #   command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data:

networks:
  money-manager-network:
    driver: bridge
